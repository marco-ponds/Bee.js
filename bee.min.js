function Tree(){this.options=void 0,this.nodes=[],this.size=0,this.hasRoot=!1,this._idPool=[]}function Node(e){if(!(e.tree&&e.tree instanceof Tree))throw Tree.VALID_TREE;this.tree=e.tree;for(var t=Math.random().toString(Tree.MAX_ID_SIZE).slice(2);this.tree._idPool.indexOf(t)>-1;)t=Math.random().toString(Tree.MAX_ID_SIZE).slice(2);this.tree._idPool.push(t),this._id=t,Object.defineProperty(this,"_id",{set:function(){throw Tree.UNTOUCHABLE},get:function(){return t}}),this.data=e.data,this.tree.size+=1,this.tree.nodes.push(this),this.leftBranch=void 0,this.rightBranch=void 0,this.rightWeight=void 0,this.leftWeight=void 0,this._isRoot=!1,this._isLeaf=!1,this._isParent=!1,this.children=0,this.parents=0,this.parent=void 0}Tree.MAX_CHILDREN_COUNT=2,Tree.MAX_PARENTS_COUNT=1,Tree.MAX_ID_SIZE=12,Tree.MAX_ROOT_NUMBER=1,Tree.VALID_TREE="Please use a valid Tree object.",Tree.UNTOUCHABLE="Untouchable value. Get away.",Tree.VALID_BRANCH="Please specify a valid branch.",Tree.NO_MORE_CHILDREN="No more children allowed for this node.",Tree.NO_MORE_PARENTS="This node already have a parent.",Tree.ERROR_NO_LEAVES="Sorry, something wrong in your tree. There are no leaves :(",Tree.ERROR_NO_PARENTS="Sorry, something wrong in your tree. There are no leaves :(",Tree.ERROR_STRANGE_ROOTS="Sorry, something wrong in your tree. Strange number of root nodes",Tree.ERROR_ALREADY_LEFT="Sorry, this node already have a left branch.",Tree.ERROR_ALREADY_RIGHT="Sorry, this node already have a right branch.",Tree.prototype.createNode=function(e){var t=new Node({tree:this,data:e});return t},Tree.prototype.getAllLeaves=function(){var e=[];for(var t in this.nodes)this.nodes[t]._isLeaf&&e.push(this.nodes[t]);if(0==e.length)throw Tree.ERROR_NO_LEAVES;return e},Tree.prototype.getRootNode=function(){var e=[];for(var t in this.nodes)this.nodes[t]._isRoot&&e.push(this.nodes[t]);if(1!=e.length)throw Tree.ERROR_STRANGE_ROOTS;return e[0]},Tree.prototype.getAllParents=function(){var e=[];for(var t in this.nodes)this.nodes[t]._isParent&&e.push(this.nodes[t]);if(0==e.length)throw Tree.ERROR_NO_PARENTS;return e},Tree.prototype.getPath=function(e){var t,r,i=[];for(i.push({n:e,w:void 0}),t=e.parent,r=e;t;){var o=t.leftBranch._id==r._id?t.leftWeight:t.rightWeight;i.push({n:t,w:o}),r=t,t=t.parent}return i.reverse()},Node.prototype.setRoot=function(e){this._isRoot=e},Node.prototype.setParent=function(e){this._isParent=e},Node.prototype.setLeaf=function(e){this._isLeaf=e},Node.prototype.update=function(){0==this.children?0==this.parents?(this.setLeaf(!1),this.setRoot(!0),this.setParent(!1)):(this.setLeaf(!0),this.setRoot(!1),this.setParent(!1)):0==this.parents?(this.setLeaf(!1),this.setRoot(!0),this.setParent(!0)):(this.setLeaf(!1),this.setRoot(!1),this.setParent(!0))},Node.prototype.addLeaf=function(e,t){if(this.children+1>Tree.MAX_CHILDREN_COUNT)throw Tree.NO_MORE_CHILDREN;if("left"==t.branch){if(this.leftBranch)throw Tree.ERROR_ALREADY_LEFT;this.leftBranch=e,this.leftWeight=t.weights.l}else{if("right"!=t.branch)throw Tree.VALID_BRANCH;if(this.rightBranch)throw Tree.ERROR_ALREADY_RIGHT;this.rightBranch=e,this.rightWeight=t.weights.r}this.children+=1,e.parent=this,e.parents=1,this.update(),e.update()},Node.prototype.addParent=function(e,t){if(this.parents+1>Tree.MAX_PARENTS_COUNT)throw Tree.NO_MORE_PARENTS;if(e.children+1>Tree.MAX_CHILDREN_COUNT)throw Tree.NO_MORE_CHILDREN;e.addLeaf(this,t)};
